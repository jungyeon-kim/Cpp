/*
	객체지향)	데이터를 구조화시켜 객체의 관점으로 바라보는 프로그래밍 기법

	4대 특성:	추상화, 캡슐화, 상속, 다형성
	5대 원칙:	SOLID
				SRP(단일책임 원칙):			하나의 책임만 가지는 객체를 지향 -> Coupling(결합도) 최소화
											책임이 많을 수록 다른 객체와 결합도가 높아져 유지보수 성능이 떨어질 수 있음
											ex) A의 기능을 수정하면 B의 기능도 수정해야함
				OCP(개방폐쇠 원칙):			확장에는 개방되고 수정에는 폐쇠되야함
											ex) 각 클래스의 연관된 부분들을 묶어 인터페이스화
				LSP(리스코프 치환 원칙):		자식객체는 부모객체로 치환되도 문제가 없어야함
											ex) Square를 Rectangle로 업캐스팅하여 오버라이드된 너비,높이 Set함수순으로 호출하면
												넓이는 너비 * 높이가 아닌 높이 * 높이가 됨
				ISP(인터페이스 분리 원칙):	인터페이스는 용도에 맞게 분리되어야함
											ex) 인터페이스 A의 a를 B가 사용하지 않는다면 A를 분리
				DIP(의존역전 원칙):			상위객체는 하위객체에 비의존적이어야 함
											ex) 하위객체에 대한 인터페이스를 작성해 상위객체는 그 인터페이스를 참조(의존)
*/